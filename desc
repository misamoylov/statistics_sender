1. Клиентский скрипт
Подключение к 100 хостам.
Сбор информации о: состоянии CPU, памяти, аптайм и виндоус секьюрити логи
После сбора инфы отправляет на сервер
Шифрование собранной инфы перед отправкой на сервер
Реализация для win и linux

2. Серверный скрипт
Устанавливается на серверную машину
Конфиг для каждой машины должен быть в XML, с указанием значение когда уведомлять что проблемы (примеры хмл в аттаче)
Сервер подключается к каждой машине из конфига и заливает на нее в временную директорию клиентский скрипт в каталог tmp
После получения ответа от клиентского скрипта нужно распарсить ответ и положить все в базу данных
В случае если видим в хмл алерт, то что данные из нее попали под требования отправляем письмо юзеру

win32api для сбора статистики
smtplib - почта
paramiko - ssh
pycrypto шифрование

Добавить юнитесты


DB Config:
id - Integer, host id
Operating sysem
IP_addr - 'string' ip address of host
User - username for auth
Passowrd - password for auth
Mail - string, mail for sending errors
Last Average CPU - Integer
Limit CPU - Integer
Last Average Memory Av - Integer
Limit Average Memory - Integer
Uptime - Integer


<client ip='127.0.0.1' port='22',os='windows' username='user' password='password' mail="asa@asda.com">
 <alert type="memory" limit="50%" />
 <alert type="cpu" limit="20%" />
</client>


Алгоритм работы серверного скрипта:
1. Сервер читает конфиги по очереди и кладет их в базу, если такого пользователя еще нет (проверка по ip адресу)
2. Прочитал первый конфиг, если его нет в базе добавили туда
3. Сервер заливает клиентский скрипт на удаленный хост, если не получается (недоступна по SSH, либо по WMI(если винда), отправляет сообщение на экран, что не получилось и идет дальше)
4. Сервер запускает  клиентский скрипт на удаленной машине с указанием параметра, что за ОС там
5. Сервер читает ответ от скрипта
6. Если есть нарушения лимитов отправляет письмо
Для шагов 4-6 либа http://stackoverflow.com/questions/22320705/how-to-run-local-python-script-on-remote-machine
Алгоритм работы клиентского скрипта:
1. Скрипт выполняется и собирает статистику
2. Скрипт возвращает словарь с статистики для хоста (ip address, cpu average, uptime, memory average